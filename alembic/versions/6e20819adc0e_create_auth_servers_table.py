"""create auth_servers table

Revision ID: 6e20819adc0e
Revises: 14debd1a1d24
Create Date: 2025-07-09 16:07:38.116232

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6e20819adc0e'
down_revision: Union[str, Sequence[str], None] = '14debd1a1d24'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('auth_servers', sa.Column('name', sa.String(), nullable=True))
    op.add_column('auth_servers', sa.Column('ip', sa.String(), nullable=True))
    op.drop_constraint(op.f('auth_servers_host_key'), 'auth_servers', type_='unique')
    op.create_index(op.f('ix_auth_servers_id'), 'auth_servers', ['id'], unique=False)
    op.create_index(op.f('ix_auth_servers_name'), 'auth_servers', ['name'], unique=True)
    op.create_unique_constraint(None, 'auth_servers', ['ip'])
    op.drop_column('auth_servers', 'reg_number')
    op.drop_column('auth_servers', 'last_login')
    op.drop_column('auth_servers', 'host')
    op.drop_column('auth_servers', 'session_cookie')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('auth_servers', sa.Column('session_cookie', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('auth_servers', sa.Column('host', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('auth_servers', sa.Column('last_login', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('auth_servers', sa.Column('reg_number', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'auth_servers', type_='unique')
    op.drop_index(op.f('ix_auth_servers_name'), table_name='auth_servers')
    op.drop_index(op.f('ix_auth_servers_id'), table_name='auth_servers')
    op.create_unique_constraint(op.f('auth_servers_host_key'), 'auth_servers', ['host'], postgresql_nulls_not_distinct=False)
    op.drop_column('auth_servers', 'ip')
    op.drop_column('auth_servers', 'name')
    # ### end Alembic commands ###
